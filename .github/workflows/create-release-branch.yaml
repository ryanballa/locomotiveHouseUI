name: Create Weekly Release Branch

on:
  schedule:
    # Runs every Wednesday at 5:00 AM CT (10:00 AM UTC in standard time, 11:00 AM UTC in daylight time)
    # Using 10:00 UTC as baseline (adjust if needed for DST)
    - cron: "0 10 * * 3"
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create release branch
        run: |
          # Get next Wednesday's date in MM-DD-YYYY format (Central Time)
          # GitHub Actions runs in UTC, so we need to convert to CT
          CURRENT_DATE=$(date -d "now - 5 hours" +"%Y-%m-%d")
          CURRENT_DAY=$(date -d "${CURRENT_DATE}" +"%u")  # 1=Monday, 3=Wednesday, 7=Sunday

          # Calculate days until next Wednesday (3)
          DAYS_UNTIL_WEDNESDAY=$(( (3 - CURRENT_DAY + 7) % 7 ))
          if [ ${DAYS_UNTIL_WEDNESDAY} -eq 0 ]; then
            DAYS_UNTIL_WEDNESDAY=7  # If today is Wednesday, get next week's Wednesday
          fi

          NEXT_WEDNESDAY=$(date -d "${CURRENT_DATE} + ${DAYS_UNTIL_WEDNESDAY} days" +"%m-%d-%Y")
          BRANCH_NAME="release-${NEXT_WEDNESDAY}"

          # Check if branch already exists
          if git ls-remote --heads origin "${BRANCH_NAME}" | grep -q "${BRANCH_NAME}"; then
            echo "Branch ${BRANCH_NAME} already exists"
            exit 0
          fi

          # Create and push the new branch from main
          git checkout main
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

          echo "Created and pushed branch: ${BRANCH_NAME}"
